
/* Start a CAS session named 'mySession' if not already started */
cas mySession sessopts=(caslib=casuser timeout=1800);

/* Assign a CASLIB if needed (adjust path/auth as per your setup) */
libname casuser cas caslib="casuser";

%macro load_s3_csv(full_s3_path, delimiter, suffix, base_name);

    %let cas_table = %sysfunc(catx(_, %upcase(&base_name), &suffix));

    /* Parse bucket and key from full S3 path */
    %let s3_no_prefix = %sysfunc(prxchange(s/^s3:\/\///, -1, &full_s3_path));
    %let bucket = %scan(&s3_no_prefix, 1, /);
    %let key = %sysfunc(substr(&s3_no_prefix, %eval(%length(&bucket) + 2)));

    proc cas;
        table.loadTable / 
            path="&key"
            importOptions={
                fileType="csv",
                delimiter="&delimiter",
                getNames=true
            }
            casOut={
                caslib="casuser",
                name="&cas_table",
                replace=true
            }
            accessorOptions={
                bucket="&bucket",
                region="ap-southeast-2",
                authDomain="MyS3AuthDomain"
            };
    quit;

    %put NOTE: Loaded s3://&bucket/&key into CAS table &cas_table using delimiter &delimiter;

%mend;


data _null_;
    set work.paths_generated;

    if lowcase(ftype) = 'csv' then do;

        length real_delim $1;
        select (strip(upcase(delimtr)));
            when ('COMMA')    real_delim = ',';
            when ('SEMICOLON') real_delim = ';';
            otherwise real_delim = ',';  /* default */
        end;

        call execute(cats(
            '%nrstr(%load_s3_csv)(', 
            quote(trim(path_data_land)), ', ',
            quote(real_delim), ', ',
            'l, ',
            quote(trim(data_set)), 
            ');'
        ));
    end;
run;
