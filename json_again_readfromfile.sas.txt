/****************************************************************************************
  Project    : Load JSON file (no extension) from SAS user folder to SAS table
  Version    : 1.1 (Level-1 flatten)
  Date       : 2025-06-22
  Author     : Code Copilot (AI)
  Description: 
    - Loads a JSON file (could be array or object) with NO file extension
    - Flattens only top-level nested JSON (level 1)
    - Writes to specified SAS library/table
****************************************************************************************/

proc python;
submit;
import os
import pandas as pd
import json
import traceback

# --- PARAMETERS: Set these as needed ---
input_file = "/your/user/folder/your_json_file"   # Full path, no extension required
saslib = "mylib"                                  # Output SAS library
out_table = "my_json_table"                       # Output SAS table name

print(f"Reading file: {input_file}")

try:
    # Read the whole file
    with open(input_file, 'r', encoding='utf-8') as f:
        data = json.load(f)  # Handles object or array

    # If top-level is a dict, wrap in list to flatten as table
    if isinstance(data, dict):
        data = [data]
    elif not isinstance(data, list):
        raise Exception("Top-level JSON is not a dict or list.")

    # Flatten only to level 1
    df = pd.json_normalize(data, max_level=1)

    # Clean column names for SAS: max 32 chars, only alphanum and _
    def clean_sas_column(col):
        import re
        col = re.sub(r"[^A-Za-z0-9_]", "_", col)
        return col[:32]
    df.columns = [clean_sas_column(col) for col in df.columns]

    print("Sample DataFrame (first 5 rows):")
    print(df.head())

    # Save to SAS table
    SAS.df2sd(df, f"{saslib}.{out_table}", replace=True)
    print(f"Data loaded to SAS table: {saslib}.{out_table}")

except Exception as e:
    print("ERROR loading JSON file to SAS table:")
    print(traceback.format_exc())

endsubmit;
run;
